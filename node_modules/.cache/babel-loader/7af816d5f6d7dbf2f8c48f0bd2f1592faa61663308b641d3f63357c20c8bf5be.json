{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[num1,setNum1]=useState(\"\");const[num2,setNum2]=useState(\"\");const[result,setResult]=useState(null);const[error,setError]=useState(null);const handleInputChange=(e,num)=>{const value=e.target.value;// Reset result when numeric input changes\nsetResult(null);// Validate the input (basic validation for demonstration)\nif(!value.trim().match(/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/)){setError(\"Invalid input. Please enter a valid number.\");}else{setError(null);num===1?setNum1(value):setNum2(value);}};const handleOperation=operation=>{// Check if both num1 and num2 are empty\nif(num1.trim()===\"\"&&num2.trim()===\"\"){setError(\"Please enter values for both numbers.\");return;}// Check if either num1 or num2 is empty\nif(num1.trim()===\"\"||num2.trim()===\"\"){setError(\"\".concat(num1.trim()===\"\"?\"Num1\":\"Num2\",\" is empty. Please enter a value.\"));return;}// Basic arithmetic operations\nswitch(operation){case\"+\":setResult(parseFloat(num1)+parseFloat(num2));break;case\"-\":setResult(parseFloat(num1)-parseFloat(num2));break;case\"*\":setResult(parseFloat(num1)*parseFloat(num2));break;case\"/\":// Check for division by zero\nif(parseFloat(num2)===0){setError(\"Cannot divide by zero.\");setResult(null);}else{setResult(parseFloat(num1)/parseFloat(num2));setError(null);}break;default:break;}// Reset input values after calculation\nsetNum1(\"\");setNum2(\"\");};const handleBackspace=num=>{num===1?setNum1(num1.slice(0,-1)):setNum2(num2.slice(0,-1));};return/*#__PURE__*/_jsxs(\"div\",{className:\"calculator\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"React Calculator\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Num1\",value:num1,onChange:e=>handleInputChange(e,1),onKeyDown:e=>e.key===\"Backspace\"&&handleBackspace(1)})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Num2\",value:num2,onChange:e=>handleInputChange(e,2),onKeyDown:e=>e.key===\"Backspace\"&&handleBackspace(2)})}),/*#__PURE__*/_jsxs(\"div\",{id:\"inner-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sign\",onClick:()=>handleOperation(\"+\"),children:\"+\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sign\",onClick:()=>handleOperation(\"-\"),children:\"-\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sign\",onClick:()=>handleOperation(\"*\"),children:\"*\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sign\",onClick:()=>handleOperation(\"/\"),children:\"/\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"message error\",children:error}),result!==null&&/*#__PURE__*/_jsxs(\"div\",{className:\"message success\",children:[\"Result: \",result]})]});};export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","num1","setNum1","num2","setNum2","result","setResult","error","setError","handleInputChange","e","num","value","target","trim","match","handleOperation","operation","concat","parseFloat","handleBackspace","slice","className","children","type","placeholder","onChange","onKeyDown","key","id","onClick"],"sources":["C:/Users/Sanam/react-calculator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst App = () => {\r\n  const [num1, setNum1] = useState(\"\");\r\n  const [num2, setNum2] = useState(\"\");\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleInputChange = (e, num) => {\r\n    const value = e.target.value;\r\n\r\n    // Reset result when numeric input changes\r\n    setResult(null);\r\n\r\n    // Validate the input (basic validation for demonstration)\r\n    if (!value.trim().match(/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/)) {\r\n      setError(\"Invalid input. Please enter a valid number.\");\r\n    } else {\r\n      setError(null);\r\n      num === 1 ? setNum1(value) : setNum2(value);\r\n    }\r\n  };\r\n\r\n  const handleOperation = (operation) => {\r\n    // Check if both num1 and num2 are empty\r\n    if (num1.trim() === \"\" && num2.trim() === \"\") {\r\n      setError(\"Please enter values for both numbers.\");\r\n      return;\r\n    }\r\n\r\n    // Check if either num1 or num2 is empty\r\n    if (num1.trim() === \"\" || num2.trim() === \"\") {\r\n      setError(`${num1.trim() === \"\" ? \"Num1\" : \"Num2\"} is empty. Please enter a value.`);\r\n      return;\r\n    }\r\n\r\n    // Basic arithmetic operations\r\n    switch (operation) {\r\n      case \"+\":\r\n        setResult(parseFloat(num1) + parseFloat(num2));\r\n        break;\r\n      case \"-\":\r\n        setResult(parseFloat(num1) - parseFloat(num2));\r\n        break;\r\n      case \"*\":\r\n        setResult(parseFloat(num1) * parseFloat(num2));\r\n        break;\r\n      case \"/\":\r\n        // Check for division by zero\r\n        if (parseFloat(num2) === 0) {\r\n          setError(\"Cannot divide by zero.\");\r\n          setResult(null);\r\n        } else {\r\n          setResult(parseFloat(num1) / parseFloat(num2));\r\n          setError(null);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Reset input values after calculation\r\n    setNum1(\"\");\r\n    setNum2(\"\");\r\n  };\r\n\r\n  const handleBackspace = (num) => {\r\n    num === 1 ? setNum1(num1.slice(0, -1)) : setNum2(num2.slice(0, -1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <h1>React Calculator</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Num1\"\r\n          value={num1}\r\n          onChange={(e) => handleInputChange(e, 1)}\r\n          onKeyDown={(e) => e.key === \"Backspace\" && handleBackspace(1)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Num2\"\r\n          value={num2}\r\n          onChange={(e) => handleInputChange(e, 2)}\r\n          onKeyDown={(e) => e.key === \"Backspace\" && handleBackspace(2)}\r\n        />\r\n      </div>\r\n      <div id=\"inner-box\">\r\n        <div className=\"sign\" onClick={() => handleOperation(\"+\")}>+</div>\r\n        <div className=\"sign\" onClick={() => handleOperation(\"-\")}>-</div>\r\n        <div className=\"sign\" onClick={() => handleOperation(\"*\")}>*</div>\r\n        <div className=\"sign\" onClick={() => handleOperation(\"/\")}>/</div>\r\n      </div>\r\n      {error && <div className=\"message error\">{error}</div>}\r\n      {result !== null && <div className=\"message success\">Result: {result}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}